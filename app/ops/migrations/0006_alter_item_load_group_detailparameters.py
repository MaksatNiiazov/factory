# Generated by Django 4.2 on 2023-08-19 10:07

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


def populate_load_group(apps, scheme_editor):
    LoadGroup = apps.get_model('catalog', 'LoadGroup')
    Item = apps.get_model('ops', 'Item')

    items = Item.objects.filter(load_group__isnull=True)

    if items.exists():
        temp_load_group, _ = LoadGroup.objects.get_or_create(lgv=0, kn=0)
        items.update(load_group=temp_load_group)


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0006_populate_loadgroup'),
        ('ops', '0005_alter_item_options'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='item',
            name='load_group'
        ),
        migrations.AddField(
            model_name='item',
            name='load_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='catalog.loadgroup', verbose_name='Нагрузочная группа'),
        ),
        migrations.RunPython(populate_load_group),
        migrations.AlterField(
            model_name='item',
            name='load_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='catalog.loadgroup', verbose_name='Нагрузочная группа'),
        ),
        migrations.CreateModel(
            name='DetailParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('load_plus_x', models.FloatField(verbose_name='Нагрузка +X')),
                ('load_plus_y', models.FloatField(verbose_name='Нагрузка +Y')),
                ('load_plus_z', models.FloatField(verbose_name='Нагрузка +Z')),
                ('load_minus_x', models.FloatField(verbose_name='Нагрузка -X')),
                ('load_minus_y', models.FloatField(verbose_name='Нагрузка -Y')),
                ('load_minus_z', models.FloatField(verbose_name='Нагрузка -Z')),
                ('additional_load_x', models.FloatField(verbose_name='Дополнительная нагрузка (расчетная) X')),
                ('additional_load_y', models.FloatField(verbose_name='Дополнительная нагрузка (расчетная) Y')),
                ('additional_load_z', models.FloatField(verbose_name='Дополнительная нагрузка (расчетная) Z')),
                ('move_plus_x', models.FloatField(verbose_name='Перемещение +X')),
                ('move_plus_y', models.FloatField(verbose_name='Перемещение +Y')),
                ('move_plus_z', models.FloatField(verbose_name='Перемещение +Z')),
                ('move_minus_x', models.FloatField(verbose_name='Перемещение -X')),
                ('move_minus_y', models.FloatField(verbose_name='Перемещение -Y')),
                ('move_minus_z', models.FloatField(verbose_name='Перемещение -Z')),
                ('estimated_state', models.CharField(choices=[('cold', 'Холодная нагрузка'), ('hot', 'Горячая нагрузка')], default='cold', max_length=4, verbose_name='Расчетное состояние')),
                ('minimum_spring_travel', models.FloatField(verbose_name='Минимальный запас хода пружины')),
                ('pipe_location', models.CharField(choices=[('horizontal', 'Горизонтальное'), ('vertical', 'Вертикальное')], max_length=10, verbose_name='Расположение трубы')),
                ('pipe_direction', models.CharField(choices=[('x', 'X'), ('y', 'Y'), ('z', 'Z'), ('at_angle', 'Под углом')], max_length=8, verbose_name='Направление трубы')),
                ('ambient_temperature', models.IntegerField(verbose_name='Температура среды')),
                ('outer_diameter_special', models.FloatField(blank=True, null=True, verbose_name='Внешний диаметр специальный')),
                ('insulation_thickness', models.FloatField(verbose_name='Толщина изоляции')),
                ('distance_between_supports', models.FloatField(verbose_name='Расстояние между опорами')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parameters', to='ops.item', verbose_name='Деталь')),
                ('nominal_diameter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='catalog.pipediameter', verbose_name='Номинальный диаметр')),
                ('outer_diameter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='catalog.pipediameter', verbose_name='Внешний диаметр')),
            ],
            options={
                'verbose_name': 'параметры изделия',
                'verbose_name_plural': 'параметры изделия',
            },
        ),
    ]
